{"version":3,"sources":["components/Header/Header.js","components/TodoList/TodoList.js","components/App/App.js","reportWebVitals.js","index.js"],"names":["Header","useState","show","setShow","username","setUsername","password","setPassword","localStorage","getItem","login","setLogin","Row","className","Col","xs","md","onClick","e","preventDefault","fetch","then","res","json","data","setItem","window","location","reload","Modal","onHide","closeButton","Title","Body","onSubmit","method","headers","body","JSON","stringify","type","onChange","event","target","value","placeholder","required","TodoList","todo","setName","description","setDescription","setData","useEffect","catch","error","console","log","updateStatus","removeTodo","listItems","map","element","Accordion","defaultActiveKey","Item","eventKey","pk","fields","title","created_at","substring","completed","Button","name","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.77475fb5.chunk.js","sourcesContent":["import { React, useState } from \"react\";\r\nimport './Header.css';\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Modal from 'react-bootstrap/Modal'\r\n\r\n\r\nfunction Header() {\r\n    const [show, setShow] = useState(false);\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);    \r\n\r\n    const [username, setUsername] = useState(null);\r\n    const [password, setPassword] = useState(null);\r\n    const [login, setLogin] = useState(localStorage.getItem(\"login\"));\r\n\r\n    const handleUsernameChange = (event) => {\r\n        setUsername(event.target.value)              \r\n    }\r\n\r\n    const handlePasswordChange = (event) => {\r\n        setPassword(event.target.value)\r\n                \r\n    }   \r\n\r\n    const handleLoginSubmit = (e) => {\r\n        e.preventDefault()\r\n        let data = {'username': username, 'password': password}       \r\n        fetch(\"/api/login\", {method: 'POST', headers: {'Content-Type': 'application/json', 'Accept': 'application/json'}, body: JSON.stringify(data)}).then((res) => res.json())\r\n        .then((data) => [setShow(false), localStorage.setItem(\"login\", data.login)]).then(() => { \r\n            setLogin(localStorage.getItem(\"login\"))\r\n            window.location.reload(false);\r\n        });                             \r\n    }\r\n\r\n    const handleLogout = (e) => {\r\n        e.preventDefault()               \r\n        fetch(\"/api/logout\").then((res) => res.json())\r\n        .then((data) => [localStorage.setItem(\"login\", false)]).then(() => {            \r\n            setLogin(localStorage.getItem(\"login\"))\r\n            window.location.reload(false);\r\n        });                             \r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Row className=\"Header m-0 bg-dark text-white p-1\">\r\n                <Col className=\"h1 my-auto\" xs={0} md={2}></Col>\r\n                <Col className=\"h1 my-auto\" xs={9}md={8}>Django-React Todo API</Col>\r\n                <Col className=\"my-auto\" xs={3} md={2}><div>{login==='true' ? <div onClick={handleLogout} className=\"btn text-light login-text\">Logout</div> : <div onClick={handleShow} className=\"btn text-light login-text\">Login</div>}</div></Col>\r\n            </Row>\r\n            <Modal show={show} onHide={handleClose}>\r\n                <Modal.Header className=\"p-2\" closeButton>\r\n                    <Modal.Title className=\"p-1\">Login</Modal.Title>                    \r\n                </Modal.Header>                \r\n                <Modal.Body>\r\n                    <form className=\"w-75 mx-auto form-add-todo\" onSubmit={handleLoginSubmit}>     \r\n                        <input className=\"col-12 m-1\" type=\"text\" username={username} onChange={handleUsernameChange} placeholder=\"username\" required/>\r\n                        <input className=\"col-12 m-1\" type=\"password\" password={password} onChange={handlePasswordChange} placeholder=\"password\" required/>  \r\n                        <input className=\"col-12 btn bg-dark text-light mt-2\" type=\"submit\" value=\"Submit\" />                \r\n                    </form>  \r\n                </Modal.Body>                \r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\nexport default Header;","import { React, useState, useEffect} from \"react\";\r\nimport './TodoList.css';\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Button from 'react-bootstrap/Button';\r\nimport Accordion from 'react-bootstrap/Accordion'\r\n\r\nfunction TodoList() {\r\n    const [show, setShow] = useState(false);\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n    const [todo, setName] = useState(null);\r\n    const [description, setDescription] = useState(null);\r\n    const [login, setLogin] = useState(null)\r\n    \r\n    const [data, setData] = useState(null);\r\n\r\n    useEffect(() => {\r\n        setLogin((localStorage.getItem(\"login\")))\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        fetch(\"/api\").then((res) => res.json())\r\n        .then((data) => setData(data)).catch((error) => {\r\n            console.log(error);\r\n        });        \r\n    }, [])\r\n    \r\n    const updateStatus = (event) => {        \r\n        fetch(`/api/status/${event.target.value}`).then((res) => res.json())\r\n        .then((data) => setData(data)).catch((error) => {\r\n            console.log(error);\r\n        });\r\n    }\r\n\r\n    const removeTodo = (event) => {        \r\n        fetch(`/api/remove/${event.target.value}`).then((res) => res.json())\r\n        .then((data) => setData(data)).catch((error) => {\r\n            console.log(error);\r\n        });\r\n    }\r\n\r\n    const handleNameChange = (event) => {\r\n        setName(event.target.value);\r\n        console.log(todo)        \r\n    }\r\n\r\n    const handleDescriptionChange = (event) => {\r\n        setDescription(event.target.value);\r\n        console.log(description)        \r\n    }\r\n\r\n    const handleSubmit = () => {        \r\n        let endPoint = '/api/add_todo'\r\n        let data = {'name': todo, 'description': description}\r\n        fetch(endPoint, {method: 'POST', headers: {'Content-Type': 'application/json', 'Accept': 'application/json'},body: JSON.stringify(data)}).then((res) => res.json())\r\n            .then((data) => setData(data));                      \r\n    }    \r\n\r\n    const listItems = (data || []).map((element) =>\r\n        <div  key={element.pk} className=\"text-center\">\r\n            <Accordion className=\"w-75 mx-auto mb-2 mt-3\" defaultActiveKey=\"1\">\r\n                <Accordion.Item eventKey=\"0\">\r\n                        <Accordion.Header>\r\n                            <Col xs={12}>\r\n                                <div className=\"text-dark h5\">{element.pk}.{element.fields.title}</div>\r\n                            </Col>                                                                                                                                \r\n                        </Accordion.Header>\r\n                    <Accordion.Body>\r\n                        <Row className=\"text-center todo-list\">\r\n                            <Col xs={12} className=\"h5\">{element.fields.description}</Col>\r\n                            <Col xs={6}>Created</Col>                            \r\n                            <Col xs={6}>Status</Col>                            \r\n                            <Col className=\"border-bottom border-dark mb-2\" xs={12}></Col>\r\n                            <Col xs={6}>{element.fields.created_at.substring(0,10)}</Col>                            \r\n                            <Col xs={6}>{element.fields.completed ? 'Complete' : 'Pending'}</Col>\r\n                            {login==='true' ? \r\n                            <Col className=\"buttons mt-2\" xs={12}>                                \r\n                                <Button onClick={removeTodo} value={element.pk} className=\"m-1 bg-danger text-light text-right\">Remove</Button>\r\n                                <Button onClick={updateStatus} value={element.pk} className=\"m-1 bg-success text-light text-right\">Update</Button>                                \r\n                            </Col>\r\n                            : <div></div>}                                                                                  \r\n                        </Row>\r\n                    </Accordion.Body>\r\n                </Accordion.Item>\r\n            </Accordion>            \r\n        </div>\r\n    ); \r\n    return (\r\n        <div>  \r\n            <div className=\"Todo\">\r\n                {login==='true' ? <Button onClick={handleShow} className=\"m-1 text-light h5 mt-3 w-75 mx-auto add-todo\">Add Item</Button> : <div></div>}\r\n                {listItems}\r\n            </div>\r\n            <Modal show={show} onHide={handleClose}>\r\n                <Modal.Header className=\"p-2\" closeButton>\r\n                    <Modal.Title>Add Todo item</Modal.Title>                    \r\n                </Modal.Header>                \r\n                <Modal.Body>\r\n                <form className=\"w-75 mx-auto form-add-todo\" onSubmit={handleSubmit}>     \r\n                    <input className=\"col-12 m-1\" type=\"text\" name={todo} onChange={handleNameChange} placeholder=\"Item Name\" required/>\r\n                    <input className=\"col-12 m-1\" type=\"text\" name={description} onChange={handleDescriptionChange} placeholder=\"description\" required/>  \r\n                    <input className=\"col-12 btn bg-dark text-light mt-2\" type=\"submit\" value=\"Submit\" />                \r\n                </form>  \r\n                </Modal.Body>                \r\n            </Modal>\r\n        </div>\r\n      \r\n    );\r\n}\r\nexport default TodoList;","import { React, useState } from \"react\";\nimport Header from '../Header/Header';\nimport TodoList from '../TodoList/TodoList';\nimport './App.css';\n\nfunction App() {  \n\n  return (\n    <div className=\"App\">\n      <Header />\n      <TodoList />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}