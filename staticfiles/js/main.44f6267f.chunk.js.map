{"version":3,"sources":["components/Header/Header.js","components/TodoList/TodoList.js","components/App/App.js","reportWebVitals.js","index.js"],"names":["Header","className","TodoList","useState","show","setShow","todo","setName","description","setDescription","data","setData","useEffect","fetch","then","res","json","catch","error","console","log","updateStatus","event","target","value","removeTodo","listItems","map","element","Accordion","defaultActiveKey","Item","eventKey","Col","xs","pk","fields","title","Body","Row","created_at","substring","completed","Button","onClick","id","Modal","onHide","closeButton","Title","onSubmit","method","headers","body","JSON","stringify","type","name","onChange","placeholder","required","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.44f6267f.chunk.js","sourcesContent":["import './Header.css';\r\n\r\nfunction Header() {\r\n    return (\r\n        <div className=\"Header m-0 bg-dark text-white p-1\">\r\n        <h1>Django-react Todo API</h1>\r\n        </div>\r\n    );\r\n}\r\nexport default Header;","import { React, useState, useEffect} from \"react\";\r\nimport './TodoList.css';\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Button from 'react-bootstrap/Button';\r\nimport Accordion from 'react-bootstrap/Accordion'\r\n\r\nfunction TodoList() {\r\n    const [show, setShow] = useState(false);\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n    const [todo, setName] = useState(null);\r\n    const [description, setDescription] = useState(null);\r\n    \r\n    const [data, setData] = useState(null);       \r\n\r\n    useEffect(() => {\r\n        fetch(\"/api\").then((res) => res.json())\r\n        .then((data) => setData(data)).catch((error) => {\r\n            console.log(error);\r\n        });        \r\n    }, [])\r\n    \r\n    const updateStatus = (event) => {        \r\n        fetch(`/api/status/${event.target.value}`).then((res) => res.json())\r\n        .then((data) => setData(data)).catch((error) => {\r\n            console.log(error);\r\n        });\r\n    }\r\n\r\n    const removeTodo = (event) => {        \r\n        fetch(`/api/remove/${event.target.value}`).then((res) => res.json())\r\n        .then((data) => setData(data)).catch((error) => {\r\n            console.log(error);\r\n        });\r\n    }\r\n\r\n    const handleNameChange = (event) => {\r\n        setName(event.target.value);\r\n        console.log(todo)        \r\n    }\r\n\r\n    const handleDescriptionChange = (event) => {\r\n        setDescription(event.target.value);\r\n        console.log(description)        \r\n    }\r\n\r\n    const handleSubmit = () => {        \r\n        let endPoint = '/api/add_todo'\r\n        let data = {'name': todo, 'description': description}\r\n        fetch(endPoint, {method: 'POST', headers: {'Content-Type': 'application/json', 'Accept': 'application/json'},body: JSON.stringify(data)}).then((res) => res.json())\r\n            .then((data) => setData(data));                      \r\n    } \r\n\r\n    const listItems = (data || []).map((element) =>\r\n        <div  key={element.id} className=\"text-center\">\r\n            <Accordion className=\"w-75 mx-auto mb-2 mt-3\" defaultActiveKey=\"1\">\r\n                <Accordion.Item eventKey=\"0\">\r\n                        <Accordion.Header>\r\n                            <Col xs={12}>\r\n                                <div className=\"text-dark h5\">{element.pk}.{element.fields.title}</div>\r\n                            </Col>                                                                                                                                \r\n                        </Accordion.Header>\r\n                    <Accordion.Body>\r\n                        <Row className=\"text-center todo-list\">\r\n                            <Col xs={12} className=\"h5\">{element.fields.description}</Col>\r\n                            <Col xs={6}>Created</Col>                            \r\n                            <Col xs={6}>Status</Col>                            \r\n                            <Col className=\"border-bottom border-dark mb-2\" xs={12}></Col>\r\n                            <Col xs={6}>{element.fields.created_at.substring(0,10)}</Col>                            \r\n                            <Col xs={6}>{element.fields.completed ? 'Complete' : 'Pending'}</Col>\r\n                            <Col className=\"buttons mt-2\" xs={12}>                                \r\n                                <Button onClick={removeTodo} value={element.pk} className=\"m-1 bg-danger text-light text-right\">Remove</Button>\r\n                                <Button onClick={updateStatus} value={element.pk} className=\"m-1 bg-success text-light text-right\">Update</Button>                                \r\n                            </Col>                                                                                   \r\n                        </Row>\r\n                    </Accordion.Body>\r\n                </Accordion.Item>\r\n            </Accordion>            \r\n        </div>\r\n    ); \r\n    return (\r\n        <div>\r\n            <div className=\"Todo\">\r\n                <Button onClick={handleShow} className=\"m-1 text-light h5 mt-2 w-75 mx-auto add-todo\">Add Todo</Button>\r\n                {listItems}\r\n            </div>\r\n            <Modal show={show} onHide={handleClose}>\r\n                <Modal.Header className=\"p-2 mx-auto\" closeButton>\r\n                    <Modal.Title>Add Todo item</Modal.Title>                    \r\n                </Modal.Header>                \r\n                <Modal.Body>\r\n                <form className=\"w-75 mx-auto form-add-todo\" onSubmit={handleSubmit}>     \r\n                    <input className=\"col-12 m-1\" type=\"text\" name={todo} onChange={handleNameChange} placeholder=\"Item Name\" required/>\r\n                    <input className=\"col-12 m-1\" type=\"text\" name={description} onChange={handleDescriptionChange} placeholder=\"description\" required/>  \r\n                    <input className=\"col-12 btn bg-dark text-light mt-2\" type=\"submit\" value=\"Submit\" />                \r\n                </form>  \r\n                </Modal.Body>                \r\n            </Modal>\r\n        </div>\r\n      \r\n    );\r\n}\r\nexport default TodoList;","import Header from '../Header/Header';\nimport TodoList from '../TodoList/TodoList';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <TodoList />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}